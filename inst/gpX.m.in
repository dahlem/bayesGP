## Copyright (C) 2008, 2009, 2010, 2013 Dominik Dahlem <Dominik.Dahlem@gmail.com>
##
## This file is free software; as a special exception the author gives
## unlimited permission to copy and/or distribute it, with or without
## modifications, as long as this notice is preserved.
##
## This program is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY, to the extent permitted by law; without even the
## implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

## Author: Dominik Dahlem <Dominik.Dahlem@gmail.com>
## Maintainer: Dominik Dahlem <Dominik.Dahlem@gmail.com>
## Keywords: spatial correlation functions, gaussian, product
## correlation rule
## Created: 20.01.2008
## Version: @VERSION@

1;
function f = gpX(x, X, R, C, sigmaSqu, theta, y, F, FUN = @(x) 1, p=2)
  R = sigmaSqu * R + C;
  R_inv = cholinv(R);
  beta = ((F' * (R_inv * F))\F') * (R_inv * y);
  r = scf_gaussianu(X, x, theta, p) * sigmaSqu;

  f = FUN(x) * beta + r' * R_inv * (y - F * beta);
endfunction


function y = gp1(x, X, R, C, sigmaSqu, theta, y, F, FUN = @(x) 1, p=2)
  x = x';
  R = sigmaSqu * R + C;
  R_inv = cholinv(R);
  beta = ((F' * (R_inv * F))\F') * (R_inv * y);
  r = scf_gaussianu(X, x, theta, p) * sigmaSqu;

  y = FUN(x) * beta + r' * R_inv * (y - F * beta);
endfunction

function y = gp2(x, X, R, C, sigmaSqu, theta, y, F, FUN = @(x) 1, p=2)
  x = x';
  R = sigmaSqu * R + C;
  R_inv = cholinv(R);
  beta = ((F' * (R_inv * F))\F') * (R_inv * y);
  r = scf_gaussianu(X, x, theta, p) * sigmaSqu;

  y = -(FUN(x) * beta + r' * R_inv * (y - F * beta));
endfunction
